// op_ALU_16bit
case 0x9: return "ADD HL,BC";
case 0x19: return "ADD HL,DE";
case 0x29: return "ADD HL,HL";
case 0x39: return "ADD HL,SP";
case 0xe8: return "ADD SP,#";
case 0x3: return "INC BC";
case 0x13: return "INC DE";
case 0x23: return "INC HL";
case 0x33: return "INC SP";
case 0xb: return "DEC BC";
case 0x1b: return "DEC DE";
case 0x2b: return "DEC HL";
case 0x3b: return "DEC SP";

// op_ALU_8bit
case 0x87: return "ADD A,A";
case 0x80: return "ADD A,B";
case 0x81: return "ADD A,C";
case 0x82: return "ADD A,D";
case 0x83: return "ADD A,E";
case 0x84: return "ADD A,H";
case 0x85: return "ADD A,L";
case 0x86: return "ADD A,(HL)";
case 0xc6: return "ADD A,#";
case 0x8f: return "ADC A,A";
case 0x88: return "ADC A,B";
case 0x89: return "ADC A,C";
case 0x8a: return "ADC A,D";
case 0x8b: return "ADC A,E";
case 0x8c: return "ADC A,H";
case 0x8d: return "ADC A,L";
case 0x8e: return "ADC A,(HL)";
case 0xce: return "ADC A,#";
case 0x97: return "SUB A";
case 0x90: return "SUB B";
case 0x91: return "SUB C";
case 0x92: return "SUB D";
case 0x93: return "SUB E";
case 0x94: return "SUB H";
case 0x95: return "SUB L";
case 0x96: return "SUB (HL)";
case 0xd6: return "SUB #";
case 0x9f: return "SBC A,A";
case 0x98: return "SBC A,B";
case 0x99: return "SBC A,C";
case 0x9a: return "SBC A,D";
case 0x9b: return "SBC A,E";
case 0x9c: return "SBC A,H";
case 0x9d: return "SBC A,L";
case 0x9e: return "SBC A,(HL)";
case 0xa7: return "AND A";
case 0xa0: return "AND B";
case 0xa1: return "AND C";
case 0xa2: return "AND D";
case 0xa3: return "AND E";
case 0xa4: return "AND H";
case 0xa5: return "AND L";
case 0xa6: return "AND (HL)";
case 0xe6: return "AND #";
case 0xb7: return "OR A";
case 0xb0: return "OR B";
case 0xb1: return "OR C";
case 0xb2: return "OR D";
case 0xb3: return "OR E";
case 0xb4: return "OR H";
case 0xb5: return "OR L";
case 0xb6: return "OR (HL)";
case 0xf6: return "OR #";
case 0xaf: return "XOR A";
case 0xa8: return "XOR B";
case 0xa9: return "XOR C";
case 0xaa: return "XOR D";
case 0xab: return "XOR E";
case 0xac: return "XOR H";
case 0xad: return "XOR L";
case 0xae: return "XOR (HL)";
case 0xee: return "XOR *";
case 0xbf: return "CP A";
case 0xb8: return "CP B";
case 0xb9: return "CP C";
case 0xba: return "CP D";
case 0xbb: return "CP E";
case 0xbc: return "CP H";
case 0xbd: return "CP L";
case 0xbe: return "CP (HL)";
case 0xfe: return "CP #";
case 0x3c: return "INC A";
case 0x4: return "INC B";
case 0xc: return "INC C";
case 0x14: return "INC D";
case 0x1c: return "INC E";
case 0x24: return "INC H";
case 0x2c: return "INC L";
case 0x34: return "INC (HL)";
case 0x3d: return "DEC A";
case 0x5: return "DEC B";
case 0xd: return "DEC C";
case 0x15: return "DEC D";
case 0x1d: return "DEC E";
case 0x25: return "DEC H";
case 0x2d: return "DEC L";
case 0x35: return "DEC (HL)";

// op_Bitwise
case 0xcb47: return "BIT b,A";
case 0xcb40: return "BIT b,B";
case 0xcb41: return "BIT b,C";
case 0xcb42: return "BIT b,D";
case 0xcb43: return "BIT b,E";
case 0xcb44: return "BIT b,H";
case 0xcb45: return "BIT b,L";
case 0xcb46: return "BIT b,(HL)";
case 0xcbc7: return "SET b,A";
case 0xcbc0: return "SET b,B";
case 0xcbc1: return "SET b,C";
case 0xcbc2: return "SET b,D";
case 0xcbc3: return "SET b,E";
case 0xcbc4: return "SET b,H";
case 0xcbc5: return "SET b,L";
case 0xcbc6: return "SET b,(HL)";
case 0xcb87: return "RES b,A";
case 0xcb80: return "RES b,B";
case 0xcb81: return "RES b,C";
case 0xcb82: return "RES b,D";
case 0xcb83: return "RES b,E";
case 0xcb84: return "RES b,H";
case 0xcb85: return "RES b,L";
case 0xcb86: return "RES b,(HL)";

// op_Call
case 0xcd: return "CALL nn";
case 0xc4: return "CALL NZ,nn";
case 0xcc: return "CALL Z,nn";
case 0xd4: return "CALL NC,nn";
case 0xdc: return "CALL C,nn";

// op_Jump
case 0xc3: return "JP nn";
case 0xc2: return "JP NZ,nn";
case 0xca: return "JP Z,nn";
case 0xd2: return "JP NC,nn";
case 0xda: return "JP C,nn";
case 0xe9: return "JP (HL)";
case 0x18: return "JR n";
case 0x20: return "JR NZ,*";
case 0x28: return "JR Z,*";
case 0x30: return "JR NC,*";
case 0x38: return "JR C,*";

// op_Load_16bit
case 0x1: return "LD BC,nn";
case 0x11: return "LD DE,nn";
case 0x21: return "LD HL,nn";
case 0x31: return "LD SP,nn";
case 0xf9: return "LD SP,HL";
case 0xf8: return "LDHL SP,n";
case 0x8: return "LD (nn),SP";
case 0xf5: return "PUSH AF";
case 0xc5: return "PUSH BC";
case 0xd5: return "PUSH DE";
case 0xe5: return "PUSH HL";
case 0xf1: return "POP AF";
case 0xc1: return "POP BC";
case 0xd1: return "POP DE";
case 0xe1: return "POP HL";

// op_Load_8bit
case 0x6: return "LD B,n";
case 0xe: return "LD C,n";
case 0x16: return "LD D,n";
case 0x1e: return "LD E,n";
case 0x26: return "LD H,n";
case 0x2e: return "LD L,n";
case 0x7f: return "LD A,A";
case 0x78: return "LD A,B";
case 0x79: return "LD A,C";
case 0x7a: return "LD A,D";
case 0x7b: return "LD A,E";
case 0x7c: return "LD A,H";
case 0x7d: return "LD A,L";
case 0x7e: return "LD A,(HL)";
case 0x40: return "LD B,B";
case 0x41: return "LD B,C";
case 0x42: return "LD B,D";
case 0x43: return "LD B,E";
case 0x44: return "LD B,H";
case 0x45: return "LD B,L";
case 0x46: return "LD B,(HL)";
case 0x48: return "LD C,B";
case 0x49: return "LD C,C";
case 0x4a: return "LD C,D";
case 0x4b: return "LD C,E";
case 0x4c: return "LD C,H";
case 0x4d: return "LD C,L";
case 0x4e: return "LD C,(HL)";
case 0x50: return "LD D,B";
case 0x51: return "LD D,C";
case 0x52: return "LD D,D";
case 0x53: return "LD D,E";
case 0x54: return "LD D,H";
case 0x55: return "LD D,L";
case 0x56: return "LD D,(HL)";
case 0x58: return "LD E,B";
case 0x59: return "LD E,C";
case 0x5a: return "LD E,D";
case 0x5b: return "LD E,E";
case 0x5c: return "LD E,H";
case 0x5d: return "LD E,L";
case 0x5e: return "LD E,(HL)";
case 0x60: return "LD H,B";
case 0x61: return "LD H,C";
case 0x62: return "LD H,D";
case 0x63: return "LD H,E";
case 0x64: return "LD H,H";
case 0x65: return "LD H,L";
case 0x66: return "LD H,(HL)";
case 0x68: return "LD L,B";
case 0x69: return "LD L,C";
case 0x6a: return "LD L,D";
case 0x6b: return "LD L,E";
case 0x6c: return "LD L,H";
case 0x6d: return "LD L,L";
case 0x6e: return "LD L,(HL)";
case 0x70: return "LD (HL),B";
case 0x71: return "LD (HL),C";
case 0x72: return "LD (HL),D";
case 0x73: return "LD (HL),E";
case 0x74: return "LD (HL),H";
case 0x75: return "LD (HL),L";
case 0x36: return "LD (HL),n";
case 0xa: return "LD A,(BC)";
case 0x1a: return "LD A,(DE)";
case 0xfa: return "LD A,(nn)";
case 0x3e: return "LD A,#";
case 0x47: return "LD B,A";
case 0x4f: return "LD C,A";
case 0x57: return "LD D,A";
case 0x5f: return "LD E,A";
case 0x67: return "LD H,A";
case 0x6f: return "LD L,A";
case 0x2: return "LD (BC),A";
case 0x12: return "LD (DE),A";
case 0x77: return "LD (HL),A";
case 0xea: return "LD (nn),A";
case 0xf2: return "LD A,(C)";
case 0xe2: return "LD ($FF00+C),A";
case 0x3a: return "LDD A,(HL)";
case 0x32: return "LDD (HL),A";
case 0x2a: return "LDI A,(HL)";
case 0x22: return "LDI (HL),A";
case 0xe0: return "LD ($FF00+n),A";
case 0xf0: return "LD A,($FF00+n)";

// op_Misc
case 0x37: return "SWAP A,CB";
case 0x27: return "DAA";
case 0x2f: return "CPL";
case 0x3f: return "CCF";
case 0x0: return "NOP";
case 0x76: return "HALT";
case 0x1000: return "STOP";
case 0xf3: return "DI";
case 0xfb: return "EI";

// op_Return
case 0xc7: return "RST 00H";
case 0xcf: return "RST 08H";
case 0xd7: return "RST 10H";
case 0xdf: return "RST 18H";
case 0xe7: return "RST 20H";
case 0xef: return "RST 28H";
case 0xf7: return "RST 30H";
case 0xff: return "RST 38H";
case 0xc9: return "RET";
case 0xc0: return "RET NZ";
case 0xc8: return "RET Z";
case 0xd0: return "RET NC";
case 0xd8: return "RET C";
case 0xd9: return "RETI";

// op_Shift
case 0x7: return "RLCA";
case 0x17: return "RLA";
case 0xf: return "RRCA";
case 0x1f: return "RRA";
case 0x10: return "RL B,CB";

